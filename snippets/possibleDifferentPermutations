    public static void main(String[] args) {
        ArrayList<int[]> combi = new ArrayList<>();

        int[] test = new int[]{2 , 4 , 5};
        System.out.println(Arrays.toString(test));
        System.out.println(Arrays.toString(next(test , 2 , 6 , 11)));
    }

    private static int[] next(int[] combi , int min , int max , int total)
    {
        int[] next = Arrays.copyOf(combi , combi.length);

        int index = next.length - 2;
        while(index > -1)
        {
            int remarr = next.length - index - 1;
            double decBy = remarr * (remarr + 1) / 2;

            if ((sum(next , 0 , index) + remarr * max - decBy) < total ||
                    (sum(next , 0 , index) + remarr * min + decBy) > total ||
                    next[index] == max - 1)
                --index;//first index to increase is one lower
            else
                break;
        }

        if (index == 0) {
            ++next[0];
            ++index;
            if (next[0] == max)
                return null;//no next combination available
        }

        ++next[index];
        for(int i = index + 1; i < next.length - 1 ; i++)
            next[i] = next[i - 1] + 1;
        next[next.length - 1] = total - sum(next , 0 , next.length - 1);

        return next;
    }

    private static int sum(int[] in , int offset , int length)
    {
        int result = 0;

        for(int i = offset ; i < length ; i++)
            result += in[i];

        return result;
    }